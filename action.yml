name: 'Spacedock Upload'
description: 'Upload to spacedock, requires JQ already installed'
inputs:
  username:
    description: "The spacedock username to upload with"
    required: true
    default: ""
  password:
    description: "The spacedock password to upload with"
    required: true
    default: ""
  game_id:
    description: "The ID of the game being uploaded to, used for grabbing game versions"
    required: true
    default: ""
  mod_id:
    description: "The ID of the mod you are updating"
    required: true
    default: ""
  version:
    description: "The version of your mod"
    required: true
    default: ""
  zipball:
    description: "The filename of your zipball"
    required: true
    default: ""
  changelog:
    description: "The filename of your changelog"
    required: true
    default: ""
  notify-followers:
    description: "Whether or not you want to notify followers"
    required: false
    default: "yes"
  spacedock_website:
    description: "The spacedock website being uploaded to (defaults to spacedock.info, can be alpha.spacedock.info, or beta.spacedock.info"
    required: false
    default: "spacedock.info"
branding:
  icon: 'upload'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - name: Add mask (again to be sure)
      run: echo "::add-mask::${{ inputs.password }}"
      shell: bash
    - name: Log in to spacedock
      run: |
        encoded_password=$(printf '%s' "${{ inputs.password }}" | jq -sRr @uri)
        echo "::add-mask::$encoded_password"
        login_response=$(curl -F "username=${{ inputs.username }}" -F "password=$encoded_password" -c ./cookies "https://${{ inputs.spacedock_website }}/api/login")
        login_errored=$(echo $login_response | jq .error)
        if [ "$login_errored" == "true" ]; then
          echo "Login to space dock errored: $(echo $login_response | jq .reason)"
          exit 1
        else
          echo "Login to space dock successful"
        fi
      shell: bash

    - name: Query latest game version
      run: |
        echo "LATEST_GAME_VERSION=$(curl 'https://${{ inputs.spacedock_website }}/api/${{ inputs.game_id }}/versions' | jq '.[0].friendly_version' | tr -d \")" >> $GITHUB_ENV
      shell: bash

    - name: Update mod on spacedock
      run: |
        result=$(curl -b ./cookies -F "version=${{ inputs.version }}" -F "changelog=$(cat ${{ inputs.changelog }})" -F "game-version=${{ env.LATEST_GAME_VERSION }}" -F "notify-followers=yes" -F "zipball=@${{ inputs.zipball }}" "https://${{ inputs.spacedock_website }}/api/mod/${{ inputs.mod_id }}/update")
        errored=$(echo $result | jq .error)
        if [ "$errored" == "true" ]; then
          echo "Upload to space dock errored: $(echo $result | jq .reason)"
          exit 1
        else
          echo "Upload to space dock successful"
        fi
      shell: bash
